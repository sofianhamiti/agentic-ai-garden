import{d as a,c as r,o as i,a as s}from"./index-DPu0blXN.js";const o={class:"markdown-body"},m={title:"Microservice Agent Pattern",description:"A pattern for building distributed AI agents that operate across microservices",date:"2025-04-15",type:"patterns",skillLevel:"Intermediate",frameworks:["Strands","LangGraph"],services:["Amazon Bedrock","AWS Lambda","Amazon EKS"],url:"https://aws.amazon.com/architecture/ai-ml-patterns/",image:"/images/aws-logo.svg"},p="",d=a({__name:"microservice-agent-pattern",setup(n,{expose:t}){return t({frontmatter:{title:"Microservice Agent Pattern",description:"A pattern for building distributed AI agents that operate across microservices",date:"2025-04-15",type:"patterns",skillLevel:"Intermediate",frameworks:["Strands","LangGraph"],services:["Amazon Bedrock","AWS Lambda","Amazon EKS"],url:"https://aws.amazon.com/architecture/ai-ml-patterns/",image:"/images/aws-logo.svg"},excerpt:void 0}),(c,e)=>(i(),r("div",o,e[0]||(e[0]=[s("<h1>Microservice Agent Pattern</h1><p>This pattern demonstrates how to design AI agents that operate across distributed microservices, allowing for separation of concerns, scalability, and fault tolerance.</p><h2>Key Components</h2><ul><li>Agent Orchestrator</li><li>Service-specific intelligent agents</li><li>Shared memory layer</li><li>Communication protocols between agents</li></ul><h2>Implementation Guidelines</h2><ol><li>Define clear boundaries and responsibilities for each agent</li><li>Establish communication protocols between agents</li><li>Design a shared memory architecture</li><li>Implement fault tolerance and recovery mechanisms</li></ol>",6)])))}});export{d as default,p as excerpt,m as frontmatter};
